<template>
  <div class="flex-column">
    <div class="xui-input-group-col">
      <text class="xui-input-group-col-title">需要积分的函数</text>
      <input name=a1 type="text" class="xui-input-round" placeholder="请输入待积分函数" @change="bindPhoneChange1"></input>
    </div>

    <div class="xui-input-group-col">
      <text class="xui-input-group-col-title">未知数</text>
      <input name=a2 type="text" class="xui-input-round" placeholder="请输入未知数" @change="bindPhoneChange2"></input>
    </div>

    <input type="button" class="btn" onclick="set" value="计算" />
    <input type="button" class="btn" onclick="get" value="输出结果" />

    <div class="item-content txt-left ">
      <text class="txt ">结果如下：</text>
      <text class="txt ">{{showGet}}</text>
    </div>
  </div>
</template>

<style>
  @import '../Common/index.css';
  @import '../Common/common.css';

  .item-content {
    flex-direction: column;
    background-color: #ffffff;
    padding: 30px;
    margin-bottom: 50px;
    align-items: center;
    justify-content: center;
  }

  .txt {
    padding-top: 15px;
    padding-bottom: 15px;
  }

  .txt-left {
    align-items: flex-start;
  }
</style>

<script>
  import math from '../Common/DefinitIntegral/mathjs/index.js'
  import clipboard from '@system.clipboard'

  math.import(require('mathjs-simple-integral'))

  var a1

  var a2

  export default {
    onInit() {
      this.$page.setTitleBar({ text: '定积分计算器' })
    },
    private: {
      range: ['text1', 'text2', 'text3'],
      text: 'default',
      componentName: 'clipboard',
      show: true,
      clipboard: '无内容',
      showSet: '',
      showGet: ''
    },
    bindPhoneChange1(e) {
      a1 = e.value;
    },
    bindPhoneChange2(e) {
      a2 = e.value;
    },
    changeText(e) {
      this.text = e.newValue
    },
    getProgressValue(e) {
      this.progressValue = e.progress
    },
    changeSwitchStatus(e) {
      this.switchStatus = e.checked ? 'on' : 'off'
    },
    set() {
      this.showSet = this.clipboard
      clipboard.set({
        text: math.format(math.integral(a1, a2), 15)
      })
    },
    get() {
      const self = this
      clipboard.get({
        success: function (obj) {
          self.showGet = obj.text
        }
      })
    }
  }
</script>